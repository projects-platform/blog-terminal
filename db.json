{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"themes/segment/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/segment/source/js/segment.js","path":"js/segment.js","modified":0,"renderable":1},{"_id":"themes/segment/source/styles/segment.styl","path":"styles/segment.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/segment/.editorconfig","hash":"3036325288c2bdf484691e761250264acdf9916c","modified":1576209096005},{"_id":"themes/segment/_config.yml","hash":"0dea8d1c33644e4c7a1c88346b0958653cb3758b","modified":1576485627882},{"_id":"themes/segment/package.json","hash":"ecbb0af4135123a5d91d63e37575462d5e1ad673","modified":1576209095996},{"_id":"themes/segment/yarn.lock","hash":"b7345d9afeb53367b66448d477782bb77dc8bf59","modified":1576209176299},{"_id":"themes/segment/.DS_Store","hash":"9457f542cf2c3f2a50b9ecd64858fc6f50b0d0c4","modified":1576479083806},{"_id":"themes/segment/layout/archive.pug","hash":"da0673af91aabfec75e102cb9a61a6feded5b027","modified":1576209095997},{"_id":"themes/segment/layout/category.pug","hash":"a6fad6e500ae3599a181db7487ff16f84d607e78","modified":1576209095998},{"_id":"themes/segment/layout/index.pug","hash":"0554e8bd7d44e7e507dfdf1da5cf11f912efa18e","modified":1576486985377},{"_id":"themes/segment/layout/page.pug","hash":"c06baba109a9e7a971b1f9f6761470ef9aab7194","modified":1576490846655},{"_id":"themes/segment/layout/post.pug","hash":"00accafc591bada397b7a96a183b81a5ac1fcc60","modified":1576508846362},{"_id":"themes/segment/layout/tag.pug","hash":"124be38b5945c9d7ff18d9aa1e2e9d9ce6d6eb7c","modified":1576209096001},{"_id":"themes/segment/source/favicon.ico","hash":"c9076e0eb05ea09b967ad80a9082428e88e10ad1","modified":1575940965272},{"_id":"themes/segment/source/styles/test.css","hash":"7df7d8061ebbddef7a12ed9e2b9911d56c4cd250","modified":1576486018821},{"_id":"themes/segment/layout/includes/layout.pug","hash":"e0b8abf6f5021bf88e33950cf0912b802324feec","modified":1576485986144},{"_id":"themes/segment/layout/includes/recent-posts.pug","hash":"302d401ff7cc100db437b2532ba698f00db50bad","modified":1576487039168},{"_id":"themes/segment/source/js/segment.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1576481547570},{"_id":"themes/segment/source/styles/segment.styl","hash":"d08066efae9882513e6e444edb8694cd99a8793f","modified":1576505321182},{"_id":"themes/segment/source/styles/_partible/index.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1576479262008},{"_id":"themes/segment/source/styles/_mixins/base.styl","hash":"80b608d9f70d85423d0103112de9a56e6e2185a3","modified":1576479109314},{"_id":"source/_posts/Java-Test.md","hash":"bb980f7a073d1488b7658c670cd4937281bb5a86","modified":1576509295445},{"_id":"themes/segment/source/styles/_partible/post.styl","hash":"0a3e49c3c9e0e4e2a8ce5d61e0c5462804859cf2","modified":1576509245536},{"_id":"themes/diaspora/LICENSE","hash":"63175a16773044bed84e1778009a54ad03dd5520","modified":1576056480355},{"_id":"themes/diaspora/README.md","hash":"c2118504a024e7eade2ad2a0cc293db8d3eb63fa","modified":1576056480356},{"_id":"themes/diaspora/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1576134086601},{"_id":"themes/diaspora/_config.yml","hash":"29ca86bf40c177d25dc496b55b7b05002dcdf82d","modified":1576076533044},{"_id":"themes/diaspora/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1576056480356},{"_id":"themes/diaspora/languages/default.yml","hash":"1b2b75ca9ff3bfeddb596239889b584cdfcecc32","modified":1576056480356},{"_id":"themes/diaspora/languages/it.yml","hash":"6ae71000ed039f56572143ffe90da17b95d1a66f","modified":1576056480357},{"_id":"themes/diaspora/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1576056480357},{"_id":"themes/diaspora/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1576056480357},{"_id":"themes/diaspora/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1576056480357},{"_id":"themes/diaspora/languages/zh-CN.yml","hash":"ccbba6315760755926f5abfe1b98c225a6650581","modified":1576056480357},{"_id":"themes/diaspora/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1576056480357},{"_id":"themes/diaspora/layout/archive.ejs","hash":"b6c505939cd3f45c3a062b201bf8799a8e5ad7a0","modified":1576056480361},{"_id":"themes/diaspora/layout/category.ejs","hash":"920114db892fe39fab097c4f65d8ffc9b2a76b69","modified":1576056480361},{"_id":"themes/diaspora/layout/index.ejs","hash":"7ccb03f40fada2cd74c00554e5b6718508545d71","modified":1576056480361},{"_id":"themes/diaspora/layout/layout.ejs","hash":"bbead31ed8f81cb75b22d6c220793c9ed4ff3e66","modified":1576056480361},{"_id":"themes/diaspora/layout/page.ejs","hash":"c311e177fc5eea6954e313374e73bd690814c91a","modified":1576056480361},{"_id":"themes/diaspora/layout/post.ejs","hash":"b106f61c1390d780c79887090dc29572d6be8f80","modified":1576484984797},{"_id":"themes/diaspora/layout/tag.ejs","hash":"920114db892fe39fab097c4f65d8ffc9b2a76b69","modified":1576056480362},{"_id":"themes/diaspora/scripts/page_title.js","hash":"35dbc39e4edd53b20f5433dc0d1708024049186d","modified":1576056480362},{"_id":"themes/diaspora/layout/_partial/categories.ejs","hash":"02cf5a962644da311e52fa441d2b300b0c9286a5","modified":1576056480358},{"_id":"themes/diaspora/layout/_partial/google-analytics.ejs","hash":"4806289a1c3de19a1cc4e6242c82cdd429c3bfe8","modified":1576056480358},{"_id":"themes/diaspora/layout/_partial/head.ejs","hash":"af13f26ebecc228ff8893cf458959aec9ba328d0","modified":1576056480358},{"_id":"themes/diaspora/layout/_partial/list.ejs","hash":"8e03499580aa81ec0b4c8316347b4e3839849007","modified":1576056480358},{"_id":"themes/diaspora/layout/_partial/menu.ejs","hash":"e2f1c6944b269760456575fb7fed713fa04a1761","modified":1576056480358},{"_id":"themes/diaspora/layout/_partial/photoswipe.ejs","hash":"d1d36cf0a2c03ff3c2acbc208fe11cd0afd8b7bd","modified":1576056480359},{"_id":"themes/diaspora/layout/_partial/screen.ejs","hash":"dd52f41ad214020646674df3db50ae87e6e4542b","modified":1576056480360},{"_id":"themes/diaspora/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1576056480359},{"_id":"themes/diaspora/layout/_partial/scripts.ejs","hash":"041a2e405157447b20b5d339596f35a2ec89808c","modified":1576056480361},{"_id":"themes/diaspora/layout/_partial/tags.ejs","hash":"16cfcf585417ec279c12d8cfbcf6383bf7f2a8c6","modified":1576056480361},{"_id":"themes/diaspora/source/js/diaspora.js","hash":"559740e9f119855dcd4b94435c8bc532ba7caeb3","modified":1576056480366},{"_id":"themes/diaspora/source/css/diaspora.css","hash":"7de3f43e4084e4594cdefb3ac36b0e628987c25b","modified":1576056480363},{"_id":"themes/diaspora/source/img/favicon.png","hash":"efb938a836c0b69baecdaadb89a94511f9abb299","modified":1576056480364},{"_id":"themes/diaspora/source/img/logo.png","hash":"26aa13d23a30369b683aab639499f977fe9f8175","modified":1576056480364},{"_id":"themes/diaspora/source/js/plugin.js","hash":"0ac6bf36a9a11ca6fad0af1f20e5705bc326abf4","modified":1576056480367},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.min.js","hash":"d80b713ca1bab90f27a8af7d8e43563f0fe81860","modified":1576056480368},{"_id":"themes/diaspora/source/photoswipe/photoswipe-ui-default.js","hash":"c844cca2f9a9969a810a0fb534063e008424c936","modified":1576056480368},{"_id":"themes/diaspora/source/photoswipe/photoswipe.css","hash":"a31fa495095783ef5a84ba4dba0bd6f7de3b07ea","modified":1576056480369},{"_id":"themes/diaspora/source/photoswipe/photoswipe.min.js","hash":"791703278e7c576b08b67f18404bae9eb8cebfaf","modified":1576056480370},{"_id":"themes/diaspora/source/js/jquery.min.js","hash":"3f1b0e9e54af1af2db2c8a639530448723462151","modified":1576056480366},{"_id":"themes/diaspora/layout/_partial/post/article.ejs","hash":"e825fd563381178382f790a6ce3da71ca7a3f113","modified":1576056480359},{"_id":"themes/diaspora/layout/_partial/post/gitalk.ejs","hash":"7b684b561eca872b8e18e270c07f459ea3634676","modified":1576056480359},{"_id":"themes/diaspora/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1576056480359},{"_id":"themes/diaspora/layout/_partial/post/header.ejs","hash":"95d7de69ceee48a3676ce62da096c66c500d57fc","modified":1576485111740},{"_id":"themes/diaspora/layout/_partial/post/item.ejs","hash":"b7a75aa667765b5c3a16b3b9a71ed38ea0a128a4","modified":1576056480360},{"_id":"themes/diaspora/layout/_partial/post/tag.ejs","hash":"c2b4ce7e1d7eed59f4c333915cd431f008f898e3","modified":1576056480360},{"_id":"themes/diaspora/layout/_partial/post/title.ejs","hash":"26dd15b604e7e0aa2725604b79037b86a3d1f970","modified":1576485020670},{"_id":"themes/diaspora/source/photoswipe/photoswipe.js","hash":"30967789eb2a3e1da9927e71f4f3c5339ebed39a","modified":1576056480369},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1576056480367},{"_id":"themes/diaspora/source/photoswipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1576056480368},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1576056480367},{"_id":"themes/diaspora/source/photoswipe/default-skin/default-skin.css","hash":"5763bd1a8015774f37215359bfcb5edd65d198a6","modified":1576056480367},{"_id":"themes/diaspora/source/img/cover.jpg","hash":"dc7103d4c4e05650595712b3fa395b89726df32b","modified":1576056480364},{"_id":"themes/diaspora/source/img/welcome-cover.jpg","hash":"c393dfeb52aff20a9921c1f56e2ce127683ab35a","modified":1576056480365},{"_id":"themes/segment/layout/_partial/post/header.pug","hash":"e2c8405d3cbcac88c1ab42e3b671d66d638aafc7","modified":1576485165492},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1576208284525},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1576208284525},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1576208284525},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1576208284525},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1576208284526},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1576208284537},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1576208284526},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1576208284526},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1576208284526},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1576208284526},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1576208284527},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1576208284527},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1576208284527},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1576208284527},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1576208284527},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1576208284527},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1576208284527},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1576208284528},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1576208284534},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1576208284534},{"_id":"themes/landscape/layout/post.ejs","hash":"de939dc3d6ecb1eadedd6a32f560e49bbcc45e2f","modified":1576491047577},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1576208284535},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1576208284536},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1576208284536},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1576208284537},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1576208284536},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1576208284528},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1576208284528},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1576208284528},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1576208284528},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1576208284529},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1576208284529},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1576208284529},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1576208284529},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1576208284530},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1576208284530},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1576208284532},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1576208284532},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1576208284532},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1576208284533},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1576208284534},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1576208284534},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1576208284538},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1576208284541},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1576208284554},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1576208284555},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1576208284555},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1576208284556},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1576208284556},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1576208284556},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1576208284558},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1576208284557},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1576208284559},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1576208284560},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1576208284560},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1576208284530},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1576208284531},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1576208284531},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1576208284531},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1576208284531},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1576208284532},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1576208284541},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1576208284541},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1576208284538},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1576208284539},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"76651cf1d149ddfb0e09fa3bdc3ad55ff9c0661a","modified":1576479816210},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1576208284539},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1576208284539},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1576208284540},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1576208284540},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1576208284539},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1576208284540},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1576208284540},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1576208284544},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1576208284543},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1576208284549},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1576208284557},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1576208284558},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1576208284557},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1576208284557},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1576208284558},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1576208284558},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1576208284548},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1576208284547},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1576208284554},{"_id":"themes/segment/source/styles/_partible/page.styl","hash":"c9b2170fbd01db653fd5479c9cce284f9e44835f","modified":1576490902542}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Go 语言的变量与常量","date":"2019-12-16T07:04:49.000Z","_content":"\n![](https://s2.ax1x.com/2019/10/29/KRNxoR.jpg)\n\n### 变量声明，初始化与赋值\n\n- 变量的声明格式：`var <变量名称> [变量类型]`；\n- 变量的赋值格式：`<变量名称> = <值，表达式，函数等>`；\n- 声明和赋值同时进行：`var <变量名称> [变量类型] = <值，表达式，函数等>`；\n- 分组声明的格式\n\n```go\npackage basic\n\nimport \"fmt\"\n\nfunc DeclaratGroupVariable(){\n\t// 分组声明变量\n\tvar (\n\t\tname string\n\t\tage int = 18\n\t)\n\n\tname = \"hvkcoder\"\n\n\tfmt.Printf(\"Hello！My name'is %d. I'm %d years old\", name, age)\n}\n```\n\n- 简写声明格式：`<变量名称> := <值，表达式，函数等>`，只能在局部变量声明时使用，并且必须赋值；\n- 声明多个变量，需要以 `,` 隔开；\n\n```go\npackage basic\n\nimport \"fmt\"\n\nfunc DeclaratMultiVariable(){\n\t// 声明多个变量\n\tvar a , b, c int\n\t// 为多个变量赋值\n\ta, b, c = 1 ,2, 3\n\tfmt.Printf(\"a = %d , b = %d , c = %d\", a, b, c)\n\n\t// 声明多个变量并赋值\n\tvar e, f, g int = 4, 5, 6\n\tfmt.Printf(\"e = %d , f = %d , g = %d\", e, f, g)\n\n\t// 简写声明\n\th, i, j := 7, 8, 9\n\tfmt.Printf(\"h = %d , i = %d , j = %d\", h, i, j)\n}\n```\n\n**声明全局变量时，不能使用简写声明，且必须使用 `var` 关键字。变量名是 下划线（`_`) 表示忽略。**\n\n### 常量定义的形式，类型范围\n\n- 常量定义从形式上可以分为 显式 和 隐式；\n\n  - 显式：`const <常量名称> [type] = value`；\n  - 隐式：`const <常量名称> = value`；\n\n- 一般情况下常量名称需大写，若该常量为私有常量，只需在常量名前加 下滑线（`_`)，如：`const _PI = 3.14`；\n- 常量可以使用内置表达式，如：`len()`，`unsafe.SizeOf()` 等；\n\n```go\npackage basic\n\nimport \"unsafe\"\n\n\nfunc DeclaratExpression(){\n\tconst (\n\t\t_NAME string = \"hvkcoder\"\n\t\t_NAME_LENGTH int = len(_NAME)\n\t\t_NAME_SIZE  = unsafe.Sizeof(_NAME)\n\t)\n}\n```\n\n- 多组常量声明时，常量默认取上一个常量的值；\n\n```go\npackage basic\n\nimport \"fmt\"\n\nfunc DeclaratGroupConstant(){\n\tconst (\n\t\t_NAME string = \"hvkcoder\"\n\t\t_FIRST_NAME\n\t)\n\n\tfmt.Println(_NAME)\n\tfmt.Println(_FIRST_NAME)\n}\n\n```\n\n**常量类型范围目前只支持 布尔型、数字型和字符串类型**。\n\n### 特殊常量 iota\n\n- `iota` 只能在常量的表达式中使用，在 `const` 关键字出现时， `iota`将被重置为 0；\n- `const` 中每新增一行常量声明，将使 `iota` 计数一次；\n- `iota` 常见用法：\n\n  - 跳值使用法\n\n  ```go\n  package basic\n\n  import \"fmt\"\n\n  func JumpValueByIota(){\n      const (\n          a = 3.14\n          b\n          c = iota  // 2\n          d         // 3\n      )\n      fmt.Println(a,b,c,d)\n  }\n  ```\n\n  - 插值使用法\n\n  ```go\n  package basic\n\n  import \"fmt\"\n\n  func InsertValueByIota(){\n  \tconst (\n  \t\ta = iota   // 0\n  \t\tb = 3.14\n  \t\tc = iota   // 2\n  \t\td          // 3\n  \t)\n  \tfmt.Println(a,b,c,d)\n  }\n  ```\n\n  - 表达式隐式使用法\n\n  ```go\n  package basic\n\n  import \"fmt\"\n\n  func ExpressionByIota(){\n  \tconst (\n  \t\tB = 1 << (10 * iota)  // 1\n  \t\tKB                    // 1024\n  \t\tMB                    // 1048576\n  \t\tGB                    // 1073741824\n  \t\tTB                    // 1099511627776\n  \t\tPB                    // 1125899906842624\n  \t)\n\n  \tfmt.Println(B,KB,MB,GB,TB,PB)\n  }\n  ```\n\n  - 单行使用法\n\n  ```go\n  package basic\n\n  import \"fmt\"\n\n  func SingleLineByIota(){\n  \tconst (\n  \t\ta , b = iota + 1, iota + 2\n  \t\tc, d = iota + 3, iota + 4\n\n  \t\t// a => 0 + 1\n  \t\t// b => 0 + 2\n  \t\t// c => 1 + 3\n  \t\t// d => 1 + 4\n  \t)\n  \tfmt.Println(a,b,c,d)\n  }\n  ```\n\n### 变量的类型转换\n\n- Go 语言中不存在隐式转换，类型转换必须是显式的；\n- 类型转换只能发生在两种兼容类型之间；\n- 类型转换的格式：`var <变量名称> [:]= <目标类型>(<需要转换的变量>)`;\n","source":"_posts/Java-Test.md","raw":"---\ntitle: Go 语言的变量与常量\ndate: 2019-12-16 15:04:49\ntags:\n---\n\n![](https://s2.ax1x.com/2019/10/29/KRNxoR.jpg)\n\n### 变量声明，初始化与赋值\n\n- 变量的声明格式：`var <变量名称> [变量类型]`；\n- 变量的赋值格式：`<变量名称> = <值，表达式，函数等>`；\n- 声明和赋值同时进行：`var <变量名称> [变量类型] = <值，表达式，函数等>`；\n- 分组声明的格式\n\n```go\npackage basic\n\nimport \"fmt\"\n\nfunc DeclaratGroupVariable(){\n\t// 分组声明变量\n\tvar (\n\t\tname string\n\t\tage int = 18\n\t)\n\n\tname = \"hvkcoder\"\n\n\tfmt.Printf(\"Hello！My name'is %d. I'm %d years old\", name, age)\n}\n```\n\n- 简写声明格式：`<变量名称> := <值，表达式，函数等>`，只能在局部变量声明时使用，并且必须赋值；\n- 声明多个变量，需要以 `,` 隔开；\n\n```go\npackage basic\n\nimport \"fmt\"\n\nfunc DeclaratMultiVariable(){\n\t// 声明多个变量\n\tvar a , b, c int\n\t// 为多个变量赋值\n\ta, b, c = 1 ,2, 3\n\tfmt.Printf(\"a = %d , b = %d , c = %d\", a, b, c)\n\n\t// 声明多个变量并赋值\n\tvar e, f, g int = 4, 5, 6\n\tfmt.Printf(\"e = %d , f = %d , g = %d\", e, f, g)\n\n\t// 简写声明\n\th, i, j := 7, 8, 9\n\tfmt.Printf(\"h = %d , i = %d , j = %d\", h, i, j)\n}\n```\n\n**声明全局变量时，不能使用简写声明，且必须使用 `var` 关键字。变量名是 下划线（`_`) 表示忽略。**\n\n### 常量定义的形式，类型范围\n\n- 常量定义从形式上可以分为 显式 和 隐式；\n\n  - 显式：`const <常量名称> [type] = value`；\n  - 隐式：`const <常量名称> = value`；\n\n- 一般情况下常量名称需大写，若该常量为私有常量，只需在常量名前加 下滑线（`_`)，如：`const _PI = 3.14`；\n- 常量可以使用内置表达式，如：`len()`，`unsafe.SizeOf()` 等；\n\n```go\npackage basic\n\nimport \"unsafe\"\n\n\nfunc DeclaratExpression(){\n\tconst (\n\t\t_NAME string = \"hvkcoder\"\n\t\t_NAME_LENGTH int = len(_NAME)\n\t\t_NAME_SIZE  = unsafe.Sizeof(_NAME)\n\t)\n}\n```\n\n- 多组常量声明时，常量默认取上一个常量的值；\n\n```go\npackage basic\n\nimport \"fmt\"\n\nfunc DeclaratGroupConstant(){\n\tconst (\n\t\t_NAME string = \"hvkcoder\"\n\t\t_FIRST_NAME\n\t)\n\n\tfmt.Println(_NAME)\n\tfmt.Println(_FIRST_NAME)\n}\n\n```\n\n**常量类型范围目前只支持 布尔型、数字型和字符串类型**。\n\n### 特殊常量 iota\n\n- `iota` 只能在常量的表达式中使用，在 `const` 关键字出现时， `iota`将被重置为 0；\n- `const` 中每新增一行常量声明，将使 `iota` 计数一次；\n- `iota` 常见用法：\n\n  - 跳值使用法\n\n  ```go\n  package basic\n\n  import \"fmt\"\n\n  func JumpValueByIota(){\n      const (\n          a = 3.14\n          b\n          c = iota  // 2\n          d         // 3\n      )\n      fmt.Println(a,b,c,d)\n  }\n  ```\n\n  - 插值使用法\n\n  ```go\n  package basic\n\n  import \"fmt\"\n\n  func InsertValueByIota(){\n  \tconst (\n  \t\ta = iota   // 0\n  \t\tb = 3.14\n  \t\tc = iota   // 2\n  \t\td          // 3\n  \t)\n  \tfmt.Println(a,b,c,d)\n  }\n  ```\n\n  - 表达式隐式使用法\n\n  ```go\n  package basic\n\n  import \"fmt\"\n\n  func ExpressionByIota(){\n  \tconst (\n  \t\tB = 1 << (10 * iota)  // 1\n  \t\tKB                    // 1024\n  \t\tMB                    // 1048576\n  \t\tGB                    // 1073741824\n  \t\tTB                    // 1099511627776\n  \t\tPB                    // 1125899906842624\n  \t)\n\n  \tfmt.Println(B,KB,MB,GB,TB,PB)\n  }\n  ```\n\n  - 单行使用法\n\n  ```go\n  package basic\n\n  import \"fmt\"\n\n  func SingleLineByIota(){\n  \tconst (\n  \t\ta , b = iota + 1, iota + 2\n  \t\tc, d = iota + 3, iota + 4\n\n  \t\t// a => 0 + 1\n  \t\t// b => 0 + 2\n  \t\t// c => 1 + 3\n  \t\t// d => 1 + 4\n  \t)\n  \tfmt.Println(a,b,c,d)\n  }\n  ```\n\n### 变量的类型转换\n\n- Go 语言中不存在隐式转换，类型转换必须是显式的；\n- 类型转换只能发生在两种兼容类型之间；\n- 类型转换的格式：`var <变量名称> [:]= <目标类型>(<需要转换的变量>)`;\n","slug":"Java-Test","published":1,"updated":"2019-12-16T15:14:55.445Z","_id":"ck483falj000073ppc06x1tm7","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"https://s2.ax1x.com/2019/10/29/KRNxoR.jpg\" alt=\"\"></p>\n<h3 id=\"变量声明，初始化与赋值\">变量声明，初始化与赋值</h3>\n<ul>\n<li>变量的声明格式：<code>var &lt;变量名称&gt; [变量类型]</code>；</li>\n<li>变量的赋值格式：<code>&lt;变量名称&gt; = &lt;值，表达式，函数等&gt;</code>；</li>\n<li>声明和赋值同时进行：<code>var &lt;变量名称&gt; [变量类型] = &lt;值，表达式，函数等&gt;</code>；</li>\n<li>分组声明的格式</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">DeclaratGroupVariable</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-comment\">// 分组声明变量</span><br>\t<span class=\"hljs-keyword\">var</span> (<br>\t\tname <span class=\"hljs-keyword\">string</span><br>\t\tage <span class=\"hljs-keyword\">int</span> = <span class=\"hljs-number\">18</span><br>\t)<br><br>\tname = <span class=\"hljs-string\">\"hvkcoder\"</span><br><br>\tfmt.Printf(<span class=\"hljs-string\">\"Hello！My name'is %d. I'm %d years old\"</span>, name, age)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>简写声明格式：<code>&lt;变量名称&gt; := &lt;值，表达式，函数等&gt;</code>，只能在局部变量声明时使用，并且必须赋值；</li>\n<li>声明多个变量，需要以 <code>,</code> 隔开；</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">DeclaratMultiVariable</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-comment\">// 声明多个变量</span><br>\t<span class=\"hljs-keyword\">var</span> a , b, c <span class=\"hljs-keyword\">int</span><br>\t<span class=\"hljs-comment\">// 为多个变量赋值</span><br>\ta, b, c = <span class=\"hljs-number\">1</span> ,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span><br>\tfmt.Printf(<span class=\"hljs-string\">\"a = %d , b = %d , c = %d\"</span>, a, b, c)<br><br>\t<span class=\"hljs-comment\">// 声明多个变量并赋值</span><br>\t<span class=\"hljs-keyword\">var</span> e, f, g <span class=\"hljs-keyword\">int</span> = <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span><br>\tfmt.Printf(<span class=\"hljs-string\">\"e = %d , f = %d , g = %d\"</span>, e, f, g)<br><br>\t<span class=\"hljs-comment\">// 简写声明</span><br>\th, i, j := <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span><br>\tfmt.Printf(<span class=\"hljs-string\">\"h = %d , i = %d , j = %d\"</span>, h, i, j)<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>声明全局变量时，不能使用简写声明，且必须使用 <code>var</code> 关键字。变量名是 下划线（<code>_</code>) 表示忽略。</strong></p>\n<h3 id=\"常量定义的形式，类型范围\">常量定义的形式，类型范围</h3>\n<ul>\n<li>\n<p>常量定义从形式上可以分为 显式 和 隐式；</p>\n<ul>\n<li>显式：<code>const &lt;常量名称&gt; [type] = value</code>；</li>\n<li>隐式：<code>const &lt;常量名称&gt; = value</code>；</li>\n</ul>\n</li>\n<li>\n<p>一般情况下常量名称需大写，若该常量为私有常量，只需在常量名前加 下滑线（<code>_</code>)，如：<code>const _PI = 3.14</code>；</p>\n</li>\n<li>\n<p>常量可以使用内置表达式，如：<code>len()</code>，<code>unsafe.SizeOf()</code> 等；</p>\n</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"unsafe\"</span><br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">DeclaratExpression</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\t_NAME <span class=\"hljs-keyword\">string</span> = <span class=\"hljs-string\">\"hvkcoder\"</span><br>\t\t_NAME_LENGTH <span class=\"hljs-keyword\">int</span> = <span class=\"hljs-built_in\">len</span>(_NAME)<br>\t\t_NAME_SIZE  = unsafe.Sizeof(_NAME)<br>\t)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>多组常量声明时，常量默认取上一个常量的值；</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">DeclaratGroupConstant</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\t_NAME <span class=\"hljs-keyword\">string</span> = <span class=\"hljs-string\">\"hvkcoder\"</span><br>\t\t_FIRST_NAME<br>\t)<br><br>\tfmt.Println(_NAME)<br>\tfmt.Println(_FIRST_NAME)<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>常量类型范围目前只支持 布尔型、数字型和字符串类型</strong>。</p>\n<h3 id=\"特殊常量-iota\">特殊常量 iota</h3>\n<ul>\n<li>\n<p><code>iota</code> 只能在常量的表达式中使用，在 <code>const</code> 关键字出现时， <code>iota</code>将被重置为 0；</p>\n</li>\n<li>\n<p><code>const</code> 中每新增一行常量声明，将使 <code>iota</code> 计数一次；</p>\n</li>\n<li>\n<p><code>iota</code> 常见用法：</p>\n<ul>\n<li>跳值使用法</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">JumpValueByIota</span><span class=\"hljs-params\">()</span></span>&#123;<br>    <span class=\"hljs-keyword\">const</span> (<br>        a = <span class=\"hljs-number\">3.14</span><br>        b<br>        c = <span class=\"hljs-literal\">iota</span>  <span class=\"hljs-comment\">// 2</span><br>        d         <span class=\"hljs-comment\">// 3</span><br>    )<br>    fmt.Println(a,b,c,d)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>插值使用法</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">InsertValueByIota</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\ta = <span class=\"hljs-literal\">iota</span>   <span class=\"hljs-comment\">// 0</span><br>\t\tb = <span class=\"hljs-number\">3.14</span><br>\t\tc = <span class=\"hljs-literal\">iota</span>   <span class=\"hljs-comment\">// 2</span><br>\t\td          <span class=\"hljs-comment\">// 3</span><br>\t)<br>\tfmt.Println(a,b,c,d)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>表达式隐式使用法</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">ExpressionByIota</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\tB = <span class=\"hljs-number\">1</span> &lt;&lt; (<span class=\"hljs-number\">10</span> * <span class=\"hljs-literal\">iota</span>)  <span class=\"hljs-comment\">// 1</span><br>\t\tKB                    <span class=\"hljs-comment\">// 1024</span><br>\t\tMB                    <span class=\"hljs-comment\">// 1048576</span><br>\t\tGB                    <span class=\"hljs-comment\">// 1073741824</span><br>\t\tTB                    <span class=\"hljs-comment\">// 1099511627776</span><br>\t\tPB                    <span class=\"hljs-comment\">// 1125899906842624</span><br>\t)<br><br>\tfmt.Println(B,KB,MB,GB,TB,PB)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>单行使用法</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">SingleLineByIota</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\ta , b = <span class=\"hljs-literal\">iota</span> + <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">iota</span> + <span class=\"hljs-number\">2</span><br>\t\tc, d = <span class=\"hljs-literal\">iota</span> + <span class=\"hljs-number\">3</span>, <span class=\"hljs-literal\">iota</span> + <span class=\"hljs-number\">4</span><br><br>\t\t<span class=\"hljs-comment\">// a =&gt; 0 + 1</span><br>\t\t<span class=\"hljs-comment\">// b =&gt; 0 + 2</span><br>\t\t<span class=\"hljs-comment\">// c =&gt; 1 + 3</span><br>\t\t<span class=\"hljs-comment\">// d =&gt; 1 + 4</span><br>\t)<br>\tfmt.Println(a,b,c,d)<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"变量的类型转换\">变量的类型转换</h3>\n<ul>\n<li>Go 语言中不存在隐式转换，类型转换必须是显式的；</li>\n<li>类型转换只能发生在两种兼容类型之间；</li>\n<li>类型转换的格式：<code>var &lt;变量名称&gt; [:]= &lt;目标类型&gt;(&lt;需要转换的变量&gt;)</code>;</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://s2.ax1x.com/2019/10/29/KRNxoR.jpg\" alt=\"\"></p>\n<h3 id=\"变量声明，初始化与赋值\">变量声明，初始化与赋值</h3>\n<ul>\n<li>变量的声明格式：<code>var &lt;变量名称&gt; [变量类型]</code>；</li>\n<li>变量的赋值格式：<code>&lt;变量名称&gt; = &lt;值，表达式，函数等&gt;</code>；</li>\n<li>声明和赋值同时进行：<code>var &lt;变量名称&gt; [变量类型] = &lt;值，表达式，函数等&gt;</code>；</li>\n<li>分组声明的格式</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">DeclaratGroupVariable</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-comment\">// 分组声明变量</span><br>\t<span class=\"hljs-keyword\">var</span> (<br>\t\tname <span class=\"hljs-keyword\">string</span><br>\t\tage <span class=\"hljs-keyword\">int</span> = <span class=\"hljs-number\">18</span><br>\t)<br><br>\tname = <span class=\"hljs-string\">\"hvkcoder\"</span><br><br>\tfmt.Printf(<span class=\"hljs-string\">\"Hello！My name'is %d. I'm %d years old\"</span>, name, age)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>简写声明格式：<code>&lt;变量名称&gt; := &lt;值，表达式，函数等&gt;</code>，只能在局部变量声明时使用，并且必须赋值；</li>\n<li>声明多个变量，需要以 <code>,</code> 隔开；</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">DeclaratMultiVariable</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-comment\">// 声明多个变量</span><br>\t<span class=\"hljs-keyword\">var</span> a , b, c <span class=\"hljs-keyword\">int</span><br>\t<span class=\"hljs-comment\">// 为多个变量赋值</span><br>\ta, b, c = <span class=\"hljs-number\">1</span> ,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span><br>\tfmt.Printf(<span class=\"hljs-string\">\"a = %d , b = %d , c = %d\"</span>, a, b, c)<br><br>\t<span class=\"hljs-comment\">// 声明多个变量并赋值</span><br>\t<span class=\"hljs-keyword\">var</span> e, f, g <span class=\"hljs-keyword\">int</span> = <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span><br>\tfmt.Printf(<span class=\"hljs-string\">\"e = %d , f = %d , g = %d\"</span>, e, f, g)<br><br>\t<span class=\"hljs-comment\">// 简写声明</span><br>\th, i, j := <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span><br>\tfmt.Printf(<span class=\"hljs-string\">\"h = %d , i = %d , j = %d\"</span>, h, i, j)<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>声明全局变量时，不能使用简写声明，且必须使用 <code>var</code> 关键字。变量名是 下划线（<code>_</code>) 表示忽略。</strong></p>\n<h3 id=\"常量定义的形式，类型范围\">常量定义的形式，类型范围</h3>\n<ul>\n<li>\n<p>常量定义从形式上可以分为 显式 和 隐式；</p>\n<ul>\n<li>显式：<code>const &lt;常量名称&gt; [type] = value</code>；</li>\n<li>隐式：<code>const &lt;常量名称&gt; = value</code>；</li>\n</ul>\n</li>\n<li>\n<p>一般情况下常量名称需大写，若该常量为私有常量，只需在常量名前加 下滑线（<code>_</code>)，如：<code>const _PI = 3.14</code>；</p>\n</li>\n<li>\n<p>常量可以使用内置表达式，如：<code>len()</code>，<code>unsafe.SizeOf()</code> 等；</p>\n</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"unsafe\"</span><br><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">DeclaratExpression</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\t_NAME <span class=\"hljs-keyword\">string</span> = <span class=\"hljs-string\">\"hvkcoder\"</span><br>\t\t_NAME_LENGTH <span class=\"hljs-keyword\">int</span> = <span class=\"hljs-built_in\">len</span>(_NAME)<br>\t\t_NAME_SIZE  = unsafe.Sizeof(_NAME)<br>\t)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>多组常量声明时，常量默认取上一个常量的值；</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">DeclaratGroupConstant</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\t_NAME <span class=\"hljs-keyword\">string</span> = <span class=\"hljs-string\">\"hvkcoder\"</span><br>\t\t_FIRST_NAME<br>\t)<br><br>\tfmt.Println(_NAME)<br>\tfmt.Println(_FIRST_NAME)<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>常量类型范围目前只支持 布尔型、数字型和字符串类型</strong>。</p>\n<h3 id=\"特殊常量-iota\">特殊常量 iota</h3>\n<ul>\n<li>\n<p><code>iota</code> 只能在常量的表达式中使用，在 <code>const</code> 关键字出现时， <code>iota</code>将被重置为 0；</p>\n</li>\n<li>\n<p><code>const</code> 中每新增一行常量声明，将使 <code>iota</code> 计数一次；</p>\n</li>\n<li>\n<p><code>iota</code> 常见用法：</p>\n<ul>\n<li>跳值使用法</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">JumpValueByIota</span><span class=\"hljs-params\">()</span></span>&#123;<br>    <span class=\"hljs-keyword\">const</span> (<br>        a = <span class=\"hljs-number\">3.14</span><br>        b<br>        c = <span class=\"hljs-literal\">iota</span>  <span class=\"hljs-comment\">// 2</span><br>        d         <span class=\"hljs-comment\">// 3</span><br>    )<br>    fmt.Println(a,b,c,d)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>插值使用法</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">InsertValueByIota</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\ta = <span class=\"hljs-literal\">iota</span>   <span class=\"hljs-comment\">// 0</span><br>\t\tb = <span class=\"hljs-number\">3.14</span><br>\t\tc = <span class=\"hljs-literal\">iota</span>   <span class=\"hljs-comment\">// 2</span><br>\t\td          <span class=\"hljs-comment\">// 3</span><br>\t)<br>\tfmt.Println(a,b,c,d)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>表达式隐式使用法</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">ExpressionByIota</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\tB = <span class=\"hljs-number\">1</span> &lt;&lt; (<span class=\"hljs-number\">10</span> * <span class=\"hljs-literal\">iota</span>)  <span class=\"hljs-comment\">// 1</span><br>\t\tKB                    <span class=\"hljs-comment\">// 1024</span><br>\t\tMB                    <span class=\"hljs-comment\">// 1048576</span><br>\t\tGB                    <span class=\"hljs-comment\">// 1073741824</span><br>\t\tTB                    <span class=\"hljs-comment\">// 1099511627776</span><br>\t\tPB                    <span class=\"hljs-comment\">// 1125899906842624</span><br>\t)<br><br>\tfmt.Println(B,KB,MB,GB,TB,PB)<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>单行使用法</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs go\"><span class=\"hljs-keyword\">package</span> basic<br><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"fmt\"</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">SingleLineByIota</span><span class=\"hljs-params\">()</span></span>&#123;<br>\t<span class=\"hljs-keyword\">const</span> (<br>\t\ta , b = <span class=\"hljs-literal\">iota</span> + <span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">iota</span> + <span class=\"hljs-number\">2</span><br>\t\tc, d = <span class=\"hljs-literal\">iota</span> + <span class=\"hljs-number\">3</span>, <span class=\"hljs-literal\">iota</span> + <span class=\"hljs-number\">4</span><br><br>\t\t<span class=\"hljs-comment\">// a =&gt; 0 + 1</span><br>\t\t<span class=\"hljs-comment\">// b =&gt; 0 + 2</span><br>\t\t<span class=\"hljs-comment\">// c =&gt; 1 + 3</span><br>\t\t<span class=\"hljs-comment\">// d =&gt; 1 + 4</span><br>\t)<br>\tfmt.Println(a,b,c,d)<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"变量的类型转换\">变量的类型转换</h3>\n<ul>\n<li>Go 语言中不存在隐式转换，类型转换必须是显式的；</li>\n<li>类型转换只能发生在两种兼容类型之间；</li>\n<li>类型转换的格式：<code>var &lt;变量名称&gt; [:]= &lt;目标类型&gt;(&lt;需要转换的变量&gt;)</code>;</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}